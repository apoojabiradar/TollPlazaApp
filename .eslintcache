[{"G:\\tollplaza\\tollreceiptapp\\src\\index.js":"1","G:\\tollplaza\\tollreceiptapp\\src\\App.js":"2","G:\\tollplaza\\tollreceiptapp\\src\\reportWebVitals.js":"3","G:\\tollplaza\\tollreceiptapp\\src\\Components\\Toll.js":"4","G:\\tollplaza\\tollreceiptapp\\src\\Components\\ReceiptData.js":"5","G:\\tollplaza\\tollreceiptapp\\src\\Redux\\action.js":"6","G:\\tollplaza\\tollreceiptapp\\src\\Redux\\reducer.js":"7","G:\\tollplaza\\tollreceiptapp\\src\\serviceWorker.js":"8"},{"size":751,"mtime":1608566830763,"results":"9","hashOfConfig":"10"},{"size":393,"mtime":1608560122484,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":8219,"mtime":1608565935170,"results":"13","hashOfConfig":"10"},{"size":1250,"mtime":1608565362203,"results":"14","hashOfConfig":"10"},{"size":346,"mtime":1608552699974,"results":"15","hashOfConfig":"10"},{"size":542,"mtime":1608552697117,"results":"16","hashOfConfig":"10"},{"size":5485,"mtime":1608552639399,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zzypbs",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"G:\\tollplaza\\tollreceiptapp\\src\\index.js",[],"G:\\tollplaza\\tollreceiptapp\\src\\App.js",[],["37","38"],"G:\\tollplaza\\tollreceiptapp\\src\\reportWebVitals.js",[],["39","40"],"G:\\tollplaza\\tollreceiptapp\\src\\Components\\Toll.js",["41"],"import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  CssBaseline,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport PropTypes from 'prop-types'; \r\nimport ReceiptData from './ReceiptData'\r\nimport { getReceipt, addReceipt} from '../Redux/action';  \r\nimport { connect } from 'react-redux';  \r\n\r\n\r\n\r\nclass Toll extends Component {  \r\n  constructor(props) {  \r\n    super(props);  \r\n    this.state = {  \r\n      id: this.generateReceiptNo(),  \r\n      regNo: \"\",  \r\n      amount : 100,\r\n      date : new Date().toISOString(),\r\n      receiptType: \"oneWay\",\r\n      receiptNo: \"\",\r\n      isValidReceipt: false\r\n    };  \r\n  } \r\n\r\n  static propTypes = {  \r\n    receipts: PropTypes.array.isRequired,  \r\n    getReceipt: PropTypes.func.isRequired,  \r\n    addReceipt: PropTypes.func.isRequired,   \r\n  };  \r\n\r\n  generateReceiptNo =() => {\r\n    return Math.floor(Math.random() * (999 - 100 + 1) + 100);\r\n  }\r\n\r\n  handleAmtChange = (e) => {  \r\n    this.setState({  \r\n      amount: e.target.value === 'oneWay'?  100 : 200,\r\n      receiptType: e.target.value\r\n    });  \r\n  }\r\n \r\n  handleRegChange = (e) => {  \r\n    this.setState({  \r\n      regNo: e.target.value  \r\n    });  \r\n  }\r\n\r\n  handleDateChange = (e) => {\r\n    this.setState({\r\n        date: e.target.value\r\n    })\r\n  }\r\n  \r\n  \r\n  handleReceiptChange = (e) => {\r\n    this.setState({\r\n        receiptNo: e.target.value\r\n    })\r\n  }\r\n\r\n  componentDidMount() {  \r\n    this.props.getReceipt();  \r\n  } \r\n\r\n  \r\n  sameDay = (start, end) => {\r\n    return (start.toDateString() === end.toDateString())\r\n  }\r\n\r\n  checkReceipt = () => {\r\n    if(this.state.receiptNo && this.state.receiptNo !== 0){\r\n      var foundReceipt = this.props.receipts.filter((item) => item.id == this.state.receiptNo && item.receiptType===\"Return\");\r\n      if(foundReceipt.length>0){\r\n        var receiptDate = new Date(foundReceipt[0].date);\r\n        var today = new Date();\r\n        if(this.sameDay(receiptDate, today)){\r\n          this.setState({\r\n            isValidReceipt: true\r\n          })\r\n         \r\n        }else{\r\n          this.setState({\r\n            isValidReceipt: false\r\n        })\r\n        }\r\n      }else{\r\n        this.setState({\r\n          isValidReceipt: false\r\n      })\r\n      }\r\n    }\r\n  }\r\n  submitData = () => {  \r\n    if (this.state.regNo && this.state.date && this.state.amount) {  \r\n      const newReceipt = {  \r\n        id: this.state.id,  \r\n        regNo: this.state.regNo,  \r\n        amount: this.state.amount,\r\n        receiptType: this.state.receiptType,\r\n        date: this.state.date\r\n      }; \r\n      this.props.addReceipt(newReceipt);  \r\n      this.clearData();\r\n      console.log(\"form submitted\", newReceipt);\r\n    }\r\n  }\r\n\r\n  clearData = () => {  \r\n    this.setState({  \r\n      id: this.generateReceiptNo(),  \r\n      regNo: \"\",  \r\n      amount: 100,\r\n      receiptType:\"oneWay\"\r\n    });  \r\n  }  \r\n\r\n  render() {  \r\n\r\n    let receiptResponse=\"\";\r\n    if(this.state.receiptNo){\r\n      receiptResponse = this.state.isValidReceipt?\r\n      <Alert severity=\"success\">Valid Receipt</Alert>\r\n      :\r\n      <Alert severity=\"error\">Invalid Receipt</Alert>\r\n    }\r\n\r\n  return (\r\n\r\n   \r\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 600 }}>\r\n      <CssBaseline />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        Toll Ticket\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n      <Grid item xs={6}>\r\n    \r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n              \r\n              <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    required\r\n                    disabled\r\n                    name=\"receiptNO\"\r\n                    type=\"number\"\r\n                    label=\"Receipt No\"\r\n                    value={this.state.id}   \r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    required\r\n                    name=\"Vehical Registration Number\"\r\n                    type=\"number\"\r\n                    label=\"Vehical Registration Number\"\r\n                    onChange={this.handleRegChange} \r\n                    value={this.state.regNo}   \r\n                  />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n                    <FormControlLabel\r\n                        value=\"oneWay\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"One Way\"\r\n                        checked={this.state.receiptType==='oneWay'}\r\n                        onChange={this.handleAmtChange}\r\n                        labelPlacement=\"start\"\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"Return\"\r\n                        control={<Radio color=\"primary\" />}\r\n                        label=\"Return\"\r\n                        checked={this.state.receiptType==='Return'}\r\n                        onChange={this.handleAmtChange}\r\n                        labelPlacement=\"start\"\r\n                    />\r\n                </RadioGroup>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    required\r\n                    name=\"amount\"\r\n                    type=\"number\"\r\n                    label=\"Amount\"\r\n                    disabled\r\n                    value={this.state.amount}   \r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    required\r\n                    name=\"Date\"\r\n                    type=\"text\"\r\n                    disabled\r\n                    onChange={this.handleDateChange} \r\n                    value={this.state.date}   \r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={this.reset}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    onClick={this.submitData}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            \r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper style={{ padding: 16 }}>\r\n          <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    required\r\n                    name=\"receiptNo\"\r\n                    type=\"number\"\r\n                    label=\"Receipt No\"\r\n                    onChange={this.handleReceiptChange} \r\n                    value={this.state.receiptNo}   \r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={this.checkReceipt}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              {receiptResponse}\r\n            </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n            <br />\r\n            <br />\r\n\r\n             <ReceiptData receipts={this.props.receipts} /> \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => ({  \r\n  receipts: state.receipts  \r\n}); \r\nexport default connect(mapStateToProps, { getReceipt, addReceipt })(Toll); ","G:\\tollplaza\\tollreceiptapp\\src\\Components\\ReceiptData.js",[],"G:\\tollplaza\\tollreceiptapp\\src\\Redux\\action.js",[],"G:\\tollplaza\\tollreceiptapp\\src\\Redux\\reducer.js",[],"G:\\tollplaza\\tollreceiptapp\\src\\serviceWorker.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":83,"column":71,"nodeType":"50","messageId":"51","endLine":83,"endColumn":73},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]